@import url("https://fonts.googleapis.com/css2?family=Source+Sans+Pro:ital,wght@0,200;0,300;1,200&display=swap");

$primary: #ededed;
$primary-dark: #bfbfbf;

$grey: rgb(246, 248, 250);

$green: rgb(90, 190, 111);
$blue: rgb(41, 107, 225);
$orange: rgb(243, 170, 60);
$cyan: rgb(98, 213, 210);

$white: white;
$black: black;
$dark: hsl(0, 0%, 20%);


html {
  box-sizing: border-box;
}

body {
  font-family: 'Source Sans Pro', sans-serif;
  font-weight: 600;
  font-size: 14px;
  line-height: 1.5rem;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  min-height: 100vh;
  position: relative;

  padding-top: 5rem;
  overflow-x: hidden;
}

*,
*:before,
*:after {
  box-sizing: inherit;
}

h1,
h2,
h3,
h4 {
  font-weight: 600;
}

h2 {
  font-size: 1.5rem;
}

a {
  color: $blue;
  text-decoration: none;

  transition: color 0.2s ease-out;

  @media (pointer: fine) {
    &:hover {
      color: darken($blue, 25%);
    }
  }
}

pre {
  background: #272822;
  color: $green;
  font-family: 'Source Sans Pro', sans-serif;
}

strong {
  font-weight: 700;
}

$breakpoints: (
        "small": 767px,
        "medium": 992px,
        "med-large": 1024px,
        "large": 1200px,
) !default;

@mixin respond-to($breakpoint) {
  // If the key exists in the map
  @if map-has-key($breakpoints, $breakpoint) {
    // Prints a media query based on the value
    @media (min-width: map-get($breakpoints, $breakpoint)) {
      @content;
    }
  }

    // If the key doesn't exist in the map
  @else {
    @warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. "
        + "Available breakpoints are: #{map-keys($breakpoints)}.";
  }
}
